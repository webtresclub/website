name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.js'
      - '**.jsx'
      - '**.json'
      - '**.css'
      - 'public/**'
      - 'components/**'
      - 'pages/**'
      - 'styles/**'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Next.js site
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Export static site
        run: ${{ steps.detect-package-manager.outputs.runner }} next export

      - name: Install Surge
        run: npm install -g surge

      - name: Check Surge Token
        run: |
          if [ -z "${{ secrets.SURGE_TOKEN }}" ]; then
            echo "::error::SURGE_TOKEN secret is not set!"
            echo "Please add your Surge token to GitHub Secrets:"
            echo "1. Run 'surge token' locally to get your token"
            echo "2. Go to Settings > Secrets and variables > Actions"
            echo "3. Create a new secret named SURGE_TOKEN"
            exit 1
          fi

      - name: Deploy to Surge
        id: deploy
        run: |
          export SURGE_DOMAIN="pr-${{ github.event.pull_request.number }}-webtres.surge.sh"
          surge ./out $SURGE_DOMAIN --token ${{ secrets.SURGE_TOKEN }}
          echo "url=https://$SURGE_DOMAIN" >> $GITHUB_OUTPUT
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const prNumber = context.issue.number;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview Deployment')
            );
            
            const body = `## ðŸš€ Preview Deployment
            
            Your preview deployment is ready!
            
            âœ… **Preview URL:** ${url}
            
            ---
            
            <sub>Updated for commit: ${context.sha.substring(0, 7)}</sub>`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
            }

